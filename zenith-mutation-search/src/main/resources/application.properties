#
# Copyright 2017-2019 George Belden
# 
# This file is part of Zenith.
# 
# Zenith is free software: you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation, either version 3 of the License, or (at your option) any later
# version.
# 
# Zenith is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR
# A PARTICULAR PURPOSE. See the GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License along with
# Zenith. If not, see <http://www.gnu.org/licenses/>.
#

# The file on the classpath which contains any number of ciphers specified as JSON objects
cipher.repository-filename=ciphers.json
# The name of a particular cipher within the ciphers.json file (zodiac408 and zodiac340 are provided)
cipher.name=zodiac340

# The number of times to run the hill climbing algorithm (essentially the number of random restarts)
decipherment.epochs=10
# The number of rounds of sampling to perform per epoch (A round of sampling can itself perform any number of samples depending on the algorithm)
simulated-annealing.sampler.iterations=5000
# Annealing temperature at the beginning of each epoch
simulated-annealing.temperature.max=0.1
# Annealing temperature at the end of each epoch
simulated-annealing.temperature.min=0.001
# Whether to remove the last row of the cipher (good for block ciphers where the last line can contain some jibberish)
decipherment.remove-last-row=true
# A String representation of a column key used as a transposition key during encipherment (case-insensitive, ignored if decipherment.transposition.column-key is specified)
decipherment.transposition.column-key-string=
# A comma-separated integer array representation of a column key used as a transposition key during encipherment
decipherment.transposition.column-key=
# The number of times to perform transposition with the given key
decipherment.transposition.iterations=1
# When the transposition key length is not known, this is the key length to start hill climbing with (must be greater than 1 and less than or equal to decipherment.transposition.key-length.max)
decipherment.transposition.key-length.min=17
# When the transposition key length is not known, this is the key length to end hill climbing with (must be greater than or equal to decipherment.transposition.key-length.min)
decipherment.transposition.key-length.max=17
